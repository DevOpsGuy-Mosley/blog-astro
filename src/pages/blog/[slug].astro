---
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getEntryBySlug } from "astro:content"; // Gardez cette ligne
import { getCollection } from "astro:content"; // Ajoutez cette ligne pour getStaticPaths

export async function getStaticPaths() {
  // Récupérez directement la collection 'posts'
  const allPosts = await getCollection('blog');
  return allPosts.map((post) => ({
    params: { slug: post.slug },
    props: post, // Passez l'objet post complet comme prop pour simplifier
  }));
}

const { slug } = Astro.params;
// Récupérez l'entrée directement depuis les props si vous l'avez passée dans getStaticPaths
const post = Astro.props; // post est déjà l'objet complet de l'article

// Await the rendered content
const content = post.render ? await post.render() : null;
---

<BlogLayout title={post?.data?.title ?? "Article non trouvé"}>
  {post && post.data ? (
    <>
      <h1>{post.data.title}</h1>
      {/* Vérifiez que post.data.pubDate et post.data.author existent dans le frontmatter de vos MD */}
      <p><i>{post.data.pubDate?.toLocaleDateString('fr-FR')}</i></p>
      {/* Si vous avez un champ 'author' dans votre schéma de contenu et vos MD */}
      {post.data.author && <p>Par : {post.data.author}</p>}
      <p>Tags : {post.data.tags?.join(', ')}</p>

      {content && content.Content ? (
        <astro:content>
          <content.Content />
        </astro:content>
      ) : (
        <p>Contenu non disponible.</p>
      )}
    </>
  ) : (
    <>
      <h1>404 - Article non trouvé</h1>
      <p>Désolé, l'article demandé n'existe pas.</p>
    </>
  )}
</BlogLayout>
